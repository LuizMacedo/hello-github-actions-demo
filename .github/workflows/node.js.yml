# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './myExpressApp/package-lock.json'
    - run: npm ci
      working-directory: './myExpressApp/'
    - run: npm run build --if-present
      working-directory: './myExpressApp/'
    - run: npm test
      working-directory: './myExpressApp/'
    
    - uses: actions/upload-artifact@main
      with:
         name: webpack artifacts
         path: public/
         
    - name: Label when approved
      uses: LuizMacedo/hello-github-actions-demo@main
      env:
        APPROVALS: "1"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ADD_LABEL: "approved"

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14.x, 16.x, 18.x]
        
    steps:
    - uses: actions/checkout@v3    
    - uses: actions/download-artifact@main
      with:
        name: webpack artifacts
        path: public
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './myExpressApp/package-lock.json'
        
    - name: npm install, and test
      run: |
        npm install
        npm test
      working-directory: './myExpressApp/'      
      env:
        CI: true
